write.csv(table, "~/Desktop/cad_percent_90_genes.csv")
library(tidyverse)
library(nanoparquet)
tab <- read.csv("~/Downloads/filtered_gtex_gwas_table (4).csv")
sym <- tab$Symbol.of.blood.RNA
gtex <- read_parquet("~/Desktop/work_repo/Box organization/1results/RShiny-application/data/eqtls/gtex_variants_and_phenotypes_whole_blood.parquet")
cad_spec_table <- gtex[gtex$`Symbol of blood RNA` %in% sym,]
cad_spec_table <- cad_spec_table %>% select(`Symbol of blood RNA`, `GWAS Trait`) %>% group_by(`Symbol of blood RNA`)
cad_spec_table <- cad_spec_table %>% reframe(traits = unique(`GWAS Trait`)) %>% remove_missing()
sum(is.na(cad_spec_table$traits))
# [1] 0
cad_traits <- read.csv("~/Desktop/listofterms.csv")
cad_traits <- cad_traits$Coronary.artery.disease
cad_traits[607] <- "Cardiovascular disease"
cad_traits <- cad_traits[1:607]
cad_traits_only <- cad_spec_table[cad_spec_table$traits %in% cad_traits,]
cad <- data.frame(table(cad_traits_only$`Symbol of blood RNA`))
all <- data.frame(table(cad_spec_table$`Symbol of blood RNA`))
table <- merge(cad, all - 1, by = "Var1", all.y = T) # all - 1 removes cardiovascular disease from all traits
table$Freq.x <- replace_na(table$Freq.x, replace = 0)
all
table$Freq.y
table <- merge(cad, all, by = "Var1", all.y = T)
table
table$Freq.x <- replace_na(table$Freq.x, replace = 0)
table$Freq.y <- table$Freq.y - 1
table$Percent <- signif(x = table$Freq.x / table$Freq.y * 100, digits = 2)
colnames(table) <- c("RNA", "CAD traits", "All traits", "Percent")
range(table$Percent)
table[which.max(table$Percent),]
table$Freq.y
cad <- data.frame(table(cad_traits_only$`Symbol of blood RNA`))
all <- data.frame(table(cad_spec_table$`Symbol of blood RNA`))
table <- merge(cad, all, by = "Var1", all.y = T)
table$Freq.x <- replace_na(table$Freq.x, replace = 0)
table
table$Freq.y - 1
table$Freq.y <- table$Freq.y - 1
table$Percent <- signif(x = table$Freq.x / table$Freq.y * 100, digits = 2)
colnames(table) <- c("RNA", "CAD traits", "All traits", "Percent")
range(table$Percent)
table$Percent
range(table$Percent)
table$Percent
class(table$Percent)
range(table$Percent)
table$Freq.y
table$Freq.y
table$Percent
table$Freq.x
table$Freq.y
table$`All traits`
cad <- data.frame(table(cad_traits_only$`Symbol of blood RNA`))
all <- data.frame(table(cad_spec_table$`Symbol of blood RNA`))
table <- merge(cad, all, by = "Var1", all.y = T)
table$Freq.x <- replace_na(table$Freq.x, replace = 0)
table$Freq.y[table$Freq.y > 1] <- table$Freq.y[table$Freq.y > 1] - 1
table$Percent <- signif(x = table$Freq.x / table$Freq.y * 100, digits = 2)
colnames(table) <- c("RNA", "CAD traits", "All traits", "Percent")
range(table$Percent)
table[which.max(table$Percent),]
range(table$Percent)
table$Percent
all
cad_spec_table
# SAP130, DOCK5 CAD only!
cad_spec_table[cad_spec_table$`Symbol of blood RNA` %in% c("SAP130", "DOCK5")]
# SAP130, DOCK5 CAD only!
cad_spec_table[cad_spec_table$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
cad_traits_only[cad_traits_only$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
cad_traits[c(607, 608)] <- c("Cardiovascular disease", "Coronary artery disease")
cad_traits
# [1] 0
all_traits <- unique(cad_spec_table$traits)
all_traits[str_detect(all_traits, "age|gender|lipid|smok|diabetes|cholesterol|systolic
|hypertension|coronary artery|adiposity|adipose|diet|physical activity|
triglyceride|glucose|calori|lifestyle|consumption|exercise|atherosclerosis|
homocysteine|sleep apnea")]
write.csv(all_traits[str_detect(all_traits, "age|gender|lipid|smok|diabetes|cholesterol|systolic
|hypertension|coronary artery|adiposity|adipose|diet|physical activity|
triglyceride|glucose|calori|lifestyle|consumption|exercise|atherosclerosis|
homocysteine|sleep apnea")],
file = "~/Desktop/work_repo/github/worked_example/listofterms_CAD.csv")
# Manually prune terms which are not risk factors for CAD from the csv file. Then, re-read the data in.
cad_traits <- read.csv("~/Desktop/listofterms_CAD.csv")
# Manually prune terms which are not risk factors for CAD from the csv file. Then, re-read the data in.
cad_traits <- read.csv("~/Desktop/work_repo/github/worked_example/listofterms_CAD.csv")
cad_traits <- cad_traits$Traits
head(cad_traits)
cad_traits_only <- cad_spec_table[cad_spec_table$traits %in% cad_traits,]
# SAP130, DOCK5 CAD only!
cad_spec_table[cad_spec_table$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
cad_traits_only[cad_traits_only$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
# [1] "BMI and adiposity (confirmatory factor analysis Factor 7)"
# [2] "Body fat percentage"
# [3] "Total cholesterol levels (MTAG)"
# [4] "Body mass index (joint analysis main effects and physical activity interaction)"
# [5] "Visceral adipose tissue volumes to abdominal adipose tissue volumes ratio"
# [6] "BMI in non-smokers"
cad_traits <- c(cad_traits, "Coronary artery disease")
cad_traits_only <- cad_spec_table[cad_spec_table$traits %in% cad_traits,]
# SAP130, DOCK5 CAD only!
cad_spec_table[cad_spec_table$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
cad_traits_only[cad_traits_only$`Symbol of blood RNA` %in% c("SAP130", "DOCK5"),]
cad <- data.frame(table(cad_traits_only$`Symbol of blood RNA`))
all <- data.frame(table(cad_spec_table$`Symbol of blood RNA`))
table <- merge(cad, all, by = "Var1", all.y = T)
table$Freq.x <- replace_na(table$Freq.x, replace = 0)
table$Percent <- signif(x = table$Freq.x / table$Freq.y * 100, digits = 2)
colnames(table) <- c("RNA", "CAD traits", "All traits", "Percent")
range(table$Percent)
table[which.max(table$Percent),]
#      RNA CAD traits All traits Percent
# 44 DOCK5          1          1     100
write.csv(table, "~/Desktop/cad_percent_90_genes.csv")
nrow(table)
#      RNA CAD traits All traits Percent
# 44 DOCK5          1          1     100
write.csv(table, "~/Desktop/work_repo/github/worked_example/cad_percent_179_genes.csv")
nrow(table)
# [1] 179
length(cad_traits)
# Data from multiple healthy patients sampled before, baseline, and after vaccination (w/ saline controls)
# We include the type of vaccination in this analysis to potentially explain the variability
# The data was collected in three cohorts from either the vein or the finger. Additionally, the data collected
# across cohorts measures different time intervals, including an hour-by-hour measurement.
# Load libraries ----
library(AnnotationDbi)
library(beadarray)
library(illuminaio)
library(illuminaHumanv3.db)
library(lumi)
library(limma)
library(oligo)
library(tidyverse)
library(cowplot)
library(PCAtools)
library(GEOquery)
library(RColorBrewer)
library(EnhancedVolcano)
## INPUT: Raw file folder from GSE30101
input_dir <- "~/Desktop/work_repo/data/GSE30101_RAW/"
## OUTPUT: QC plots, limma tables, volcano plots and p-value histograms
output_dir <- "~/Desktop/work_repo/github/Obermoser_study_data/output/"
# Load in metadata ----
gset <- getGEO("GSE30101", AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- getGEO("GSE30101", AnnotGPL = TRUE, GSEMatrix = TRUE)
# Load in metadata ----
gset <- getGEO("GSE30101", AnnotGPL = TRUE, GSEMatrix = TRUE)
library(tidyverse)
library(nanoparquet)
gtex <- read_parquet("~/Desktop/work_repo/Box organization/1results/RShiny-application/data/eqtls/gtex_variants_and_phenotypes_whole_blood.parquet")
tab <- read.csv("~/Downloads/filtered_gtex_gwas_table (4).csv")
sym <- tab$Symbol.of.blood.RNA
cad_spec_table <- gtex[gtex$`Symbol of blood RNA` %in% sym,]
cad_spec_table <- cad_spec_table %>% select(`Symbol of blood RNA`, `GWAS Trait`) %>% group_by(`Symbol of blood RNA`)
cad_spec_table <- cad_spec_table %>% reframe(traits = unique(`GWAS Trait`)) %>% remove_missing()
sum(is.na(cad_spec_table$traits))
# [1] 0
all_traits <- unique(cad_spec_table$traits)
write.csv(all_traits[str_detect(all_traits, "age|gender|lipid|smok|diabetes|cholesterol|systolic|diastolic
|hypertension|coronary artery|adiposity|adipose|diet|physical activity|alcohol|
triglyceride|glucose|calori|lifestyle|consumption|exercise|atherosclerosis|
homocysteine|sleep apnea|homocystinuria|left ventric|insulin")],
file = "~/Desktop/work_repo/github/worked_example/listofterms_CAD_new.csv")
write.csv(all_traits[str_detect(all_traits, "age|gender|lipid|smok|diabetes|cholesterol|systolic|diastolic
|hypertension|coronary artery|adiposity|adipose|diet|physical activity|alcohol|
triglyceride|glucose|calori|lifestyle|consumption|exercise|atherosclerosis|
homocysteine|sleep apnea|homocystinuria|left ventric|insulin")],
file = "~/Desktop/work_repo/github/worked_example/listofterms_CAD_new.csv")
### SUMMARY: Do vaccine injections induce changes in gene expression?
# Data from multiple healthy patients sampled before, baseline, and after vaccination (w/ saline controls)
# We include the type of vaccination in this analysis to potentially explain the variability
# The data was collected in three cohorts from either the vein or the finger. Additionally, the data collected
# across cohorts measures different time intervals, including an hour-by-hour measurement.
# Load libraries ----
library(AnnotationDbi)
library(beadarray)
library(illuminaio)
library(illuminaHumanv3.db)
library(lumi)
library(limma)
library(oligo)
library(tidyverse)
library(cowplot)
library(PCAtools)
library(GEOquery)
library(RColorBrewer)
library(EnhancedVolcano)
## INPUT: Raw file folder from GSE30101
input_dir <- "~/Desktop/work_repo/data/GSE30101_RAW/"
## OUTPUT: QC plots, limma tables, volcano plots and p-value histograms
output_dir <- "~/Desktop/work_repo/github/Obermoser_study_data/output/"
# Load in metadata ----
gset <- getGEO("GSE30101", AnnotGPL = TRUE, GSEMatrix = TRUE)
gset <- getGEO(filename = "~/Downloads/GSE30101_series_matrix.txt.gz", AnnotGPL = TRUE, GSEMatrix = TRUE)
pheno_data_org <- pData(gset)
colnames(pheno_data_org)
pheno_data_org$data_processing[1]
pheno_data_org$description.1
pheno_data <- pheno_data_org %>%
dplyr::select(title,
geo_accession,
subject = `subject id:ch1`,
age = `age:ch1`,
time = `day:ch1`,
treat = `vaccine:ch1`,
sex = `gender:ch1`,
race = `race:ch1`,
ethnicity = `ethnicity:ch1`,
array = description.1,
sample = source_name_ch1,
group = `sample set:ch1`)
dim(pheno_data)
# [1] 693  12
pheno_data <- pheno_data[pheno_data$sample == "Whole Blood",]
dim(pheno_data)
# [1] 621  12
p1v <- pheno_data[grep("Training_Set_Vein", pheno_data$group),]
p1f <- pheno_data[grep("Test_Set_Finger", pheno_data$group),]
p2v <- pheno_data[grep("Test_Set_Vein", pheno_data$group),]
p2f <- pheno_data[grep("Training_Set_Finger", pheno_data$group),]
## Note that p1f actually belongs to cohort 2:
p1f_patients <- paste(p1f$subject, p1f$age, p1f$sex, p1f$race, sep = "-") %>% unique()
p2f_patients <- paste(p2f$subject, p2f$age, p2f$sex, p2f$race, sep = "-") %>% unique()
p2v_patients <- paste(p2v$subject, p2v$age, p2v$sex, p2v$race, sep = "-") %>% unique()
p1v_patients <- paste(p1v$subject, p1v$age, p1v$sex, p1v$race, sep = "-") %>% unique()
all(p2f_patients %in% p2v_patients) # [1] TRUE
all(p2f_patients %in% p1f_patients) # [1] TRUE
all(p1v_patients %in% p1f_patients) # [1] FALSE
## Open probe annotation file ----
BGX <- readBGX(file = paste(input_dir,"GPL6947_HumanHT-12_V3_0_R1_11283641_A.bgx.gz", sep = ""))
str(BGX)
## Raw data file names ----
# View cohort clustering: justifies the separate analyses of batches ----
files <- list.files(input_dir, pattern = "GSM.*\\.txt.gz$", full.names = TRUE)
length(files) # [1] 621
files <- files[str_extract(files, "GSM......") %in% pheno_data$geo_accession]
length(files) # [1] 621
# Analysis 4: Training_Set_Finger (p2f) ----
## Step 1: Read in raw expression data ----
p2f[1:5,1:5]
#                                   title geo_accession subject age time
# GSM745214 009-282-001-TP1 [5307141014E]     GSM745214       1  49 -168
# GSM745215 009-282-001-TP2 [5307141024E]     GSM745215       1  49    0
# GSM745216 009-282-001-TP3 [5307141024K]     GSM745216       1  49  1.5
# GSM745217 009-282-001-TP4 [5307141024F]     GSM745217       1  49    3
# GSM745218 009-282-001-TP5 [5322244022H]     GSM745218       1  49    6
levels(factor(p2f$time))
# [1] "-168" "0"    "1.5"  "12"   "15"   "24"   "3"    "36"   "48"   "6"    "9"
p2f$time <- factor(p2f$time, levels = c("-168","0","1.5","3","6","9","12","15","24","36","48"), ordered = T)
## This is recorded in units of hours.
dim(p2f)
# [1] 185  12
table(p2f$time, p2f$subject)
# 0    1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 1.5  1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 3    1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 6    1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 9    1  0  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1 # one missing sample
# 12   1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 15   1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 24   1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 36   1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
# 48   1  1  1  1  1  1  1  1  1  1  1  1 1 1 1 1 1
p2f[which(p2f$subject == 10),] # Non-hispanic, caucasian male treated w/ FLUZONE
p2f[which(p2f$subject == 20),] # Non-hispanic, caucasian male treated w/ Saline
table(p2f$sex, p2f$subject) ## Sanity check.
#    1 10 11 13 14 15 18 20 21 22 24 26  3  4  6  7  8
# F 11  0  0 11  0  0 11  0  0 11  0 11 11 11 11 11  0
# M  0 10 11  0 11 11  0 10 11  0 11  0  0  0  0  0 11
table(p2f$treat, p2f$subject)
## Load in files
temp <- files[str_extract(files, "GSM......") %in% p2f$geo_accession]
length(temp) # [1] 185
x <- lapply(
temp,
function(x) read.delim(file = x))
x <- do.call(cbind, x)
x[1:4,1:4]
#              X X5307141014_E.AVG_Signal X5307141014_E.Detection_Pval          X.1
# 1 ILMN_1885639                  -0.1356                       0.3544 ILMN_1885639
# 2 ILMN_2209417                  18.5837                       0.1054 ILMN_2209417
# 3 ILMN_1765401                  44.3429                       0.0237 ILMN_1765401
# 4 ILMN_1652171                  -5.8566                       0.5455 ILMN_1652171
dim(x)
# [1] 48803   555
rownames(x) <- x[,1]
x <- as.data.frame(x)
detectionpvalues <- x[,grep("Detection",colnames(x))]
x <- x[,grep("AVG",colnames(x))]
x[1:2,1:4]
data <- new('EListRaw')
data@.Data[[1]] <- 'illumina'
data@.Data[[3]] <- BGX
data@.Data[[4]] <- x
data@.Data[[5]] <- NULL
data$E <- x
data$genes <- BGX
data$other$Detection <- detectionpvalues
### Background correction and normalization ----
data_norm <- neqc(data)
dim(data_norm$E)
## Remove unexpressed probes and controls
minSamples <- min(colSums(table(p2f$subject, p2f$time))) # Find the minimum group size
print(minSamples)
# [1] 16
expressed <- rowSums(data_norm$other$Detection < 0.05) >= minSamples
data_norm$E <- data_norm$E[expressed,]
dim(data_norm$E)
id <- factor(p2f$subject)
time <- factor(p2f$time)
sex <- factor(p2f$sex)
vax <- factor(p2f$treat)
eth <- factor(p2f$ethnicity)
race <- factor(p2f$race)
df <- data.frame(data_norm$E)
TS <- factor(paste(sex,time,vax,race,eth, sep = "."))
design <- model.matrix(~0+TS, df)
colnames(design) <- make.names(levels(TS))
cor <- duplicateCorrelation(df, design, block=id)
cor$consensus.correlation
fit <- lmFit(object=df, design=design, block=id, correlation=cor$consensus.correlation)
colnames(y)
## Discovering diurnal genes ----
diurnal_contrasts <- makeContrasts((F.1.5.Saline.African.American.NA + F.1.5.Saline.Caucasian.Hispanic + F.1.5.Saline.Caucasian.Non.Hispanic.or.Latino + M.1.5.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.3.Saline.African.American.NA + F.3.Saline.Caucasian.Hispanic + F.3.Saline.Caucasian.Non.Hispanic.or.Latino + M.3.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.6.Saline.African.American.NA + F.6.Saline.Caucasian.Hispanic + F.6.Saline.Caucasian.Non.Hispanic.or.Latino + M.6.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.9.Saline.African.American.NA + F.9.Saline.Caucasian.Hispanic + F.9.Saline.Caucasian.Non.Hispanic.or.Latino + M.9.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.12.Saline.African.American.NA + F.12.Saline.Caucasian.Hispanic + F.12.Saline.Caucasian.Non.Hispanic.or.Latino + M.12.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.15.Saline.African.American.NA + F.15.Saline.Caucasian.Hispanic + F.15.Saline.Caucasian.Non.Hispanic.or.Latino + M.15.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(F.24.Saline.African.American.NA + F.24.Saline.Caucasian.Hispanic + F.24.Saline.Caucasian.Non.Hispanic.or.Latino + M.24.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
levels = colnames(design))
fit2 <- contrasts.fit(fit, diurnal_contrasts)
x <- eBayes(fit2)
y <- topTable(x, number = Inf, adjust.method = "fdr")
y$Symbol <- mapIds(x = illuminaHumanv3.db, keys = row.names(y), column = "SYMBOL", keytype = "PROBEID")
colnames(y)
## Discovering diurnal genes ----
diurnal_contrasts <- makeContrasts(One.5 = (F.1.5.Saline.African.American.NA + F.1.5.Saline.Caucasian.Hispanic + F.1.5.Saline.Caucasian.Non.Hispanic.or.Latino + M.1.5.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Three = F.3.Saline.African.American.NA + F.3.Saline.Caucasian.Hispanic + F.3.Saline.Caucasian.Non.Hispanic.or.Latino + M.3.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Six = F.6.Saline.African.American.NA + F.6.Saline.Caucasian.Hispanic + F.6.Saline.Caucasian.Non.Hispanic.or.Latino + M.6.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Nine = F.9.Saline.African.American.NA + F.9.Saline.Caucasian.Hispanic + F.9.Saline.Caucasian.Non.Hispanic.or.Latino + M.9.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Twelve = F.12.Saline.African.American.NA + F.12.Saline.Caucasian.Hispanic + F.12.Saline.Caucasian.Non.Hispanic.or.Latino + M.12.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Fifteen = F.15.Saline.African.American.NA + F.15.Saline.Caucasian.Hispanic + F.15.Saline.Caucasian.Non.Hispanic.or.Latino + M.15.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Twentyfour = F.24.Saline.African.American.NA + F.24.Saline.Caucasian.Hispanic + F.24.Saline.Caucasian.Non.Hispanic.or.Latino + M.24.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
levels = colnames(design))
fit2 <- contrasts.fit(fit, diurnal_contrasts)
x <- eBayes(fit2)
y <- topTable(x, number = Inf, adjust.method = "fdr")
y$Symbol <- mapIds(x = illuminaHumanv3.db, keys = row.names(y), column = "SYMBOL", keytype = "PROBEID")
colnames(y)
## Discovering diurnal genes ----
diurnal_contrasts <- makeContrasts(One.5 = (F.1.5.Saline.African.American.NA + F.1.5.Saline.Caucasian.Hispanic + F.1.5.Saline.Caucasian.Non.Hispanic.or.Latino + M.1.5.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Three = F.3.Saline.African.American.NA + F.3.Saline.Caucasian.Hispanic + F.3.Saline.Caucasian.Non.Hispanic.or.Latino + M.3.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Six = F.6.Saline.African.American.NA + F.6.Saline.Caucasian.Hispanic + F.6.Saline.Caucasian.Non.Hispanic.or.Latino + M.6.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Nine = F.9.Saline.African.American.NA + F.9.Saline.Caucasian.Hispanic + F.9.Saline.Caucasian.Non.Hispanic.or.Latino + M.9.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Twelve = F.12.Saline.African.American.NA + F.12.Saline.Caucasian.Hispanic + F.12.Saline.Caucasian.Non.Hispanic.or.Latino + M.12.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Fifteen = F.15.Saline.African.American.NA + F.15.Saline.Caucasian.Hispanic + F.15.Saline.Caucasian.Non.Hispanic.or.Latino + M.15.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
(Twentyfour = F.24.Saline.African.American.NA + F.24.Saline.Caucasian.Hispanic + F.24.Saline.Caucasian.Non.Hispanic.or.Latino + M.24.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
levels = colnames(design))
fit2 <- contrasts.fit(fit, diurnal_contrasts)
x <- eBayes(fit2)
y <- topTable(x, number = Inf, adjust.method = "fdr")
y$Symbol <- mapIds(x = illuminaHumanv3.db, keys = row.names(y), column = "SYMBOL", keytype = "PROBEID")
colnames(y)
## Discovering diurnal genes ----
diurnal_contrasts <- makeContrasts(A.One.5 = (F.1.5.Saline.African.American.NA + F.1.5.Saline.Caucasian.Hispanic + F.1.5.Saline.Caucasian.Non.Hispanic.or.Latino + M.1.5.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
B.Three = (F.3.Saline.African.American.NA + F.3.Saline.Caucasian.Hispanic + F.3.Saline.Caucasian.Non.Hispanic.or.Latino + M.3.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
C.Six = (F.6.Saline.African.American.NA + F.6.Saline.Caucasian.Hispanic + F.6.Saline.Caucasian.Non.Hispanic.or.Latino + M.6.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
D.Nine = (F.9.Saline.African.American.NA + F.9.Saline.Caucasian.Hispanic + F.9.Saline.Caucasian.Non.Hispanic.or.Latino + M.9.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
E.Twelve = (F.12.Saline.African.American.NA + F.12.Saline.Caucasian.Hispanic + F.12.Saline.Caucasian.Non.Hispanic.or.Latino + M.12.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
F.Fifteen = (F.15.Saline.African.American.NA + F.15.Saline.Caucasian.Hispanic + F.15.Saline.Caucasian.Non.Hispanic.or.Latino + M.15.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
G.Twentyfour = (F.24.Saline.African.American.NA + F.24.Saline.Caucasian.Hispanic + F.24.Saline.Caucasian.Non.Hispanic.or.Latino + M.24.Saline.Caucasian.Non.Hispanic.or.Latino)/4 -
(F.0.Saline.African.American.NA + F.0.Saline.Caucasian.Hispanic + F.0.Saline.Caucasian.Non.Hispanic.or.Latino + M.0.Saline.Caucasian.Non.Hispanic.or.Latino)/4,
levels = colnames(design))
fit2 <- contrasts.fit(fit, diurnal_contrasts)
x <- eBayes(fit2)
y <- topTable(x, number = Inf, adjust.method = "fdr")
y$Symbol <- mapIds(x = illuminaHumanv3.db, keys = row.names(y), column = "SYMBOL", keytype = "PROBEID")
write.csv(y, file = paste(output_dir, "diurnal_genes/diurnal_limma_F.csv", sep = ""), row.names = TRUE)
colnames(y)
## Supplemental figure 5A ----
tables <- list()
for (i in 1:7) {
tables[[i]] <- topTable(x, coef = i, number = Inf, adjust.method = "fdr")
}
lapply(tables, head)
degs <- lapply(tables, function(x){
x %>% filter(P.Value < 0.05) %>% nrow() %>% return()
})
degstb <- tibble(time = factor(c(1.5,3,6,9,12,15,24), levels = c(1.5,3,6,9,12,15,24), ordered = T), nums = unlist(degs))
output_dir
pdf(file = paste(output_dir, "figureS5A.pdf", sep = ""), width = 8, height = 8)
ggplot(degstb, aes(x = time, y = nums)) +
geom_col(fill = "black", color = "black") +
labs(title = "", subtitle = "",
x = "hours from baseline", y = "DEGs (p < 0.05)") +
theme_minimal() +
theme(axis.title.x = element_text(size = 14), axis.title.y = element_text(size = 14),
axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15))
dev.off()
dt <- decideTests(x)
summary(dt)
dt <- decideTests(x, adjust.method = NULL)
summary(dt)
common_symbols <- read.table("~/Desktop/work_repo/github/cross_study_analysis/output/common_symbols6099.txt")
common_symbols <- common_symbols$x
common_symbols
sum(common_symbols %in% c("PER1", "PER2"))
common_symbols[which(common_symbols %in% c("PER1", "PER2")]
common_symbols[which(common_symbols %in% c("PER1", "PER2"))]
gosch <- read.csv(file = "./Gosch_study_data/output/diurnal_genes_limma_F.csv")
obermoser <- read.csv(file = "./Obermoser_study_data/output/diurnal_genes/diurnal_limma_F.csv")
## Use the F-statistic
setwd("~/Desktop/work_repo/github/")
gosch <- read.csv(file = "./Gosch_study_data/output/diurnal_genes_limma_F.csv")
obermoser <- read.csv(file = "./Obermoser_study_data/output/diurnal_genes/diurnal_limma_F.csv")
head(gosch[order(gosch$P.Value)], 10)
head(gosch[order(gosch$P.Value),], 10)
head(obermoser[order(gosch$P.Value),], 10)
head(obermoser[order(obermoser$P.Value),], 10)
which(obermoser[order(gosch$P.Value),"Symbol"] %in% c("PER1", "PER2"))
which(obermoser[order(gosch$P.Value),"Symbol"] %in% c("PER1"))
which(obermoser[order(gosch$P.Value),"Symbol"] %in% c("PER2"))
which(obermoser[order(gosch$P.Value),"Symbol"] %in% c("PER1"))
which(obermoser[order(obermoser$P.Value),"Symbol"] %in% c("PER1"))
which(obermoser[order(obermoser$P.Value),"Symbol"] %in% c("PER2"))
obermoser[obermoser$Symbol == "PER1",]
obermoser[which(obermoser$Symbol == "PER1"),]
obermoser[grep("PER1", obermoser$Symbol),]
obermoser[grep("^PER1", obermoser$Symbol),]
obermoser[grep("^PER2", obermoser$Symbol),]
gosch[grep("^PER1", gosch$X),]
gosch[grep("^PER2", gosch$X),]
nrow(gosch)
nrow(obermoser)
obermoser %>% filter(Symbol %in% common_symbols, P.Value < 0.05) %>% nrow()
obermoser %>% filter(Symbol %in% common_symbols, P.Value < 0.05) %>% unique() %>% nrow()
expr_order <- obermoser[order(obermoser$AveExpr), c("Symbol", "AveExpr")]
expr_order$percentile <- (1:nrow(expr_order))/nrow(expr_order)
expr_order(grep("PER1", expr_order$Symbol))
expr_order[grep("PER1", expr_order$Symbol)]
expr_order[grep("PER1", expr_order$Symbol),]
expr_order[grep("PER2", expr_order$Symbol),]
expr_order$percentile <- ((1:nrow(expr_order))/nrow(expr_order))*100
expr_order[grep("PER1", expr_order$Symbol),]
expr_order[grep("PER2", expr_order$Symbol),]
expr_order <- gosch[order(gosch$AveExpr), c("X", "AveExpr")]
expr_order$percentile <- ((1:nrow(expr_order))/nrow(expr_order))*100
expr_order[grep("PER1", expr_order$Symbol),]
expr_order[grep("PER1", expr_order$X),]
expr_order[grep("PER2", expr_order$X),]
setwd("~/Desktop/work_repo/github/")
common_symbols <- read.csv("./cross_study_analysis/output/common_symbols6099.txt")
common_symbols <- common_symbols$x
common_symbols
common_symbols <- read.table("./cross_study_analysis/output/common_symbols6099.txt")
common_symbols <- common_symbols$x
common_symbols
setwd("~/Desktop/work_repo/github/")
common_symbols <- read.table("./cross_study_analysis/output/common_symbols6099.txt")
common_symbols <- common_symbols$x
gosch <- read.csv(file = "./Gosch_study_data/output/diurnal_genes_limma_F.csv")
gosch %>% filter(X %in% common_symbols, P.Value < 0.05) %>% nrow()
# [1] 4017
diurnal_genes_gosch_F <- gosch %>% filter(X %in% common_symbols, P.Value < 0.05) %>% dplyr::select(X)
obermoser <- read.csv(file = "./Obermoser_study_data/output/diurnal_genes/diurnal_limma_F.csv")
obermoser %>% filter(Symbol %in% common_symbols, P.Value < 0.05) %>% unique() %>% nrow()
# [1] 1157
diurnal_genes_obermoser_F <- obermoser %>% filter(Symbol %in% common_symbols, P.Value < 0.05) %>% dplyr::select(Symbol)
library(VennDiagram)
venn.diagram(x = list(diurnal_genes_gosch_F$X, diurnal_genes_obermoser_F$Symbol),
filename = "./misc/diurnal_venn_diagram.png", imagetype = "png", disable.logging = T,
category.names = c("Gosch", "Obermoser"), cat.cex = 1.25, cat.fontfamily = "Arial",
fontfamily = "Arial", cex = 1.5, fill = c("pink", "skyblue"), cat.pos = c(-30, 150))
diurnal_gene_intersect <- intersect(diurnal_genes_gosch_F$X, diurnal_genes_obermoser_F$Symbol)
gosch_p_values <- gosch[gosch$X %in% diurnal_gene_intersect, c("X", "P.Value")]
colnames(gosch_p_values)[1] <- "Symbol"
obermoser_p_values <- obermoser[obermoser$Symbol %in% diurnal_gene_intersect, c("Symbol", "P.Value")]
diurnal_gene_intersect <- data.frame(Symbol = diurnal_gene_intersect)
diurnal_gene_intersect <- merge(diurnal_gene_intersect, obermoser_p_values)
diurnal_gene_intersect <- merge(diurnal_gene_intersect, gosch_p_values, by = "Symbol")
colnames(diurnal_gene_intersect) <- c("Symbol", "Obermoser_F_pvalue", "Gosch_F_pvalue")
write.csv(diurnal_gene_intersect, file = "./misc/diurnal_genes.csv")
