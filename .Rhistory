geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, color = "gray72", size = 2))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, color = "gray72", size = 10))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, color = "gray72", size = 8))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "gray72", size = 8))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = ifelse(Symbol == "WASH7P", "black", "gray72"), size = 8))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = ifelse(gtex$Symbol == "WASH7P", "black", "gray72"), size = 8))
ggplot(data = head(gtexplot,5000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
ggplot(data = head(gtexplot,8000), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
mean(which(gtexplot$Symbol == "MYOM2"))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
index
range(index)
gtexplot[index,]
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = head(gtexplot[index,]), aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) + geom_text_repel(label = ifelse(Symbol == input$eqtlChoice, "Target", "other")) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) + geom_text_repel(label = ifelse(gtexplot$Symbol == input$eqtlChoice, gtexplot$Symbol, "")) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) + geom_text_repel(label = ifelse(gtexplot$Symbol == "MYOM2", gtexplot$Symbol, "")) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) + geom_text(label = ifelse(gtexplot$Symbol == "MYOM2", gtexplot$Symbol, "")) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) + geom_text(label = ifelse(gtexplot$Symbol == "MYOM2", gtexplot$Symbol, ""), y = stat_identity()) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_cowplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey72", size = 8))
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == input$eqtlChoice, "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 8))
index <- median(which(gtexplot$Symbol == "MYOM2"))
index <- (index-4000):(index+4000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 8.3))
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
?tags
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
index <- median(which(gtexplot$Symbol == "TUBB2A"))
index
index <- round(median(which(gtexplot$Symbol == "TUBB2A")))
index
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
gtexplot[1]
gtexplot[1,]
gtexplot[1,13]
index = 1
index <- (index-5000):(index+5000)
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
index = 1
index <- ifelse(index-5000 <= 0, 1:(index+5000), (index-5000):index(+5000))
index
1:(index+5000)
index <- ifelse(index-5000 <= 0, 1:(index+5000), (index-5000):index(+5000))
index
index-5000 <= 0
1:(index+5000)
(index-5000):index(+5000)
index <- ifelse(index-5000 <= 0, 1:(index+5000), (index-5000):(index+5000))
index
ifelse(index-5000 <= 0, 1:(index+5000), (index-5000):(index+5000))
ifelse(index-5000 <= 0, 1, 0)
index = 100000
ifelse(index-5000 <= 0, 1, 0)
ifelse(index-5000 <= 0, 1:(index + 5000), (index - 5000):(index + 5000))
seq(start = 1, stop = index + 5000, by = 1)
seq(from = 1, to = index + 5000, by = 1)
seq(from = index - 5000, to = index + 5000, by = 1)
ifelse(index-5000 <= 0, seq(from = 1, to = index + (10000 - index), by = 1), seq(from = index - 5000, to = index + 5000, by = 1))
index <- ifelse(index-5000 <= 0, seq(from = 1, to = index + (10000 - index), by = 1), seq(from = index - 5000, to = index + 5000, by = 1))
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
index = 1
index <- if (index-5000 <= 0) {seq(from = 1, to = index + (10000 - index), by = 1)} else {seq(from = index - 5000, to = index + 5000, by = 1)}
index
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "WASH7P", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
i = 17000
gtexplot[index, 13]
gtexplot[index,]
index = 17000
gtexplot[index, 13]
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "RSG1", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
index <- if (index-5000 <= 0) {seq(from = 1, to = index + (10000 - index), by = 1)} else {seq(from = index - 5000, to = index + 5000, by = 1)}
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "RSG1", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
which(gtexplot$Symbol == "HLA-DQB1")
median(which(gtexplot$Symbol == "HLA-DQB1"))
index = 812361
index <- if (index-5000 <= 0) {seq(from = 1, to = index + (10000 - index), by = 1)} else {seq(from = index - 5000, to = index + 5000, by = 1)}
ggplot(data = gtexplot[index,], aes(x = Symbol)) +
geom_bar(aes(fill = ifelse(Symbol == "HLA-DQB1", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
reactlog::reactlog_enable()
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
reactlogShow()
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
index <- round(median(which(gtexplot$`Gene Symbol` == "MYOM2")))
index <- if (index-5000 <= 0) {seq(from = 1, to = index + (10000 - index), by = 1)} else {seq(from = index - 5000, to = index + 5000, by = 1)}
ggplot(data = gtexplot[index,], aes(x = `Gene Symbol`)) +
geom_bar(aes(fill = ifelse(Symbol == "MYOM2", "Target", "other"))) +
scale_color_brewer(palette = "Paired", aesthetics = "fill") +
labs(y = "eQTL variants", fill = "") +
theme_minimal_hgrid() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, color = "grey67", size = 12))
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
shiny::runApp('Desktop/work_repo/Box organization/1results/shiny-data-new')
housekeeping_results <- read.csv("./Box organization/housekeeping gene/housekeeping_scores.csv")
setwd("~/Desktop/work_repo/")
housekeeping_results <- read.csv("./Box organization/housekeeping gene/housekeeping_scores.csv")
head(housekeeping_results)
#   geom_density(fill = "orange") +
#   theme_cowplot() +
#   labs(title = "Distr. of housekeeping scores")
#
# for (i in 1:1250) {
#   xint <- housekeeping_results$Score[which(housekeeping_results$Symbols == housekeepers$Symbol[i])]
#   g <- g + geom_vline(xintercept = xint, linewidth = 0.01)
# }
# g
## Don't cluster to the higher scores. Could be because of our scoring system, or because of there's.
hkg <- housekeeping_results[order(housekeeping_results$Score, decreasing = T),]
hkgs <- hkg$Score
names(hkgs) <- hkg$Symbols
head(hkgs, 10)
head(hkgs, 10)
## Create subsets for all genes and test for enrichment, getting multiple correct p-values
EisenbergGenes <- data.frame
## Create subsets for all genes and test for enrichment, getting multiple correct p-values
EisenbergGenes <- data.frame(term, gene)
## Create subsets for all genes and test for enrichment, getting multiple correct p-values
EisenbergGenes <- data.frame(term = 0, gene = 0)
EisenbergGenes
housekeepers <- read.table("./Eisenberg_housekeeping_12062024.txt")
dim(housekeepers)
# [1] 3804    2
dim(housekeepers[housekeepers$Symbol %in% housekeeping_results$Symbols,])
# [1] 3773    2
housekeepers <- housekeepers[housekeepers$Symbol %in% housekeeping_results$Symbols,]
subsets <- list()
subsets[[i]] <- sample(x = housekeepers, size = 500, replace = F)
housekeepers
subsets[[i]] <- sample(x = housekeepers$Symbol, size = 500, replace = F)
for (i in 1:10) {
subsets[[i]] <- sample(x = housekeepers$Symbol, size = 500, replace = F)
}
unlist(subsets)
paste("EisenbergSet", i, sep = "_")
for (i in 1:10) {
subsets[[i]] <- sample(x = housekeepers$Symbol, size = 500, replace = F)
names(subsets)[i] <- paste("EisenbergSet", i, sep = "_")
}
unlist(subsets)
EisenbergGenes <- as.data.frame(subsets)
EisenbergGenes
library(tidyverse)
library(AnnotationDbi)
library(hgu133plus2.db)
library(EnsDb.Hsapiens.v86)
library(illuminaHumanv3.db)
library(biomaRt)
library(VennDiagram)
library(cowplot)
library(clusterProfiler)
EisenbergGenes <- pivot_longer(EisenbergGenes, names_to = "term", values_to = "gene")
EisenbergGenes
EisenbergGenes <- pivot_longer(EisenbergGenes, cols = ., names_to = "term", values_to = "gene")
EisenbergGenes <- pivot_longer(EisenbergGenes, cols = colnames(EisenbergGenes), names_to = "term", values_to = "gene")
EisenbergGenes
gsea <- clusterProfiler::GSEA(geneList = hkgs,
TERM2GENE = EisenbergGenes,
eps = 1e-300, pvalueCutoff = 1,
minGSSize = 10, maxGSSize = 500)
head(as.data.frame(gsea))
dim(as.data.frame(gsea))
head(as.data.frame(gsea))
head(as.data.frame(gsea)[,c(2,4,5,6,7,9)])
as.data.frame(gsea)[,c(2,4,5,6,7,9)]
as.data.frame(gsea)[,c(2,4,5,6,7,10)]
View(gsea)
# EisenbergSet_1  tags=72%, list=25%, signal=54%
# EisenbergSet_8  tags=71%, list=26%, signal=54%
# EisenbergSet_6  tags=77%, list=30%, signal=55%
# EisenbergSet_2  tags=74%, list=29%, signal=53%
# EisenbergSet_3  tags=76%, list=30%, signal=54%
# EisenbergSet_4  tags=70%, list=26%, signal=53%
# EisenbergSet_9  tags=66%, list=25%, signal=51%
# EisenbergSet_10 tags=74%, list=30%, signal=53%
# EisenbergSet_5  tags=79%, list=34%, signal=53%
# EisenbergSet_7  tags=72%, list=30%, signal=52%
gseaplot(gsea, 1)
gseaplot(gsea, 2)
## Grouping genes according to their differential expression
## Date: June 11th, 2024
setwd("~/Desktop/work_repo/Box organization")
library(tidyverse)
library(AnnotationDbi)
library(hgu133plus2.db)
library(EnsDb.Hsapiens.v86)
# Load in all DE analyses ----
gomez <- read.csv("./Gomez study data/limma tables/limma_time.csv")
names(gomez)[1] <- "EnsemblID"
meaburn1 <- read.csv("./twins study data/limma tables/twins_limma_day1.csv")
names(meaburn1)[1] <- "ProbeID"
meaburn2 <- read.csv("./twins study data/limma tables/twins_limma_day2.csv")
names(meaburn2)[1] <- "ProbeID"
gosch3 <- read.csv("./Gosch study data/limma tables/Gosch_limma_ThreeHr.csv")
names(gosch3)[1] <- "Symbol"
gosch6 <- read.csv("./Gosch study data/limma tables/Gosch_limma_SixHr.csv")
names(gosch6)[1] <- "Symbol"
gosch9 <- read.csv("./Gosch study data/limma tables/Gosch_limma_NineHr.csv")
names(gosch9)[1] <- "Symbol"
gosch12 <- read.csv("./Gosch study data/limma tables/Gosch_limma_TwelveHr.csv")
names(gosch12)[1] <- "Symbol"
gosch15 <- read.csv("./Gosch study data/limma tables/Gosch_limma_FifteenHr.csv")
names(gosch15)[1] <- "Symbol"
gosch18 <- read.csv("./Gosch study data/limma tables/Gosch_limma_EighteenHr.csv")
names(gosch18)[1] <- "Symbol"
gosch21 <- read.csv("./Gosch study data/limma tables/Gosch_limma_TwentyoneHr.csv")
names(gosch21)[1] <- "Symbol"
obermoser1 <- list()
files <- list.files("./Obermoser study data/limma tables/Training_Vein/", full.names = TRUE)
files <- files[grep("Flu|Pneum|Saline", files, perl = T)]
names <- unlist(str_extract_all(str_extract(files, "/ .* \\."), "[A-Za-z]+"))
for (i in 1:length(files)) {
obermoser1[[i]] <- read.csv(files[i])
names(obermoser1)[i] <- names[i]
}
obermoser2 <- list()
files <- list.files("./Obermoser study data/limma tables/Test_Finger/", full.names = TRUE)
files <- files[grep("(?<=/)[FPS].*\\.csv", files, perl = T)]
names <- str_remove(str_extract(files, "(?<=/)[FPS].*\\.csv"), ".csv")
for (i in 1:length(files)) {
obermoser2[[i]] <- read.csv(files[i])
names(obermoser2)[i] <- names[i]
}
obermoser3 <- list()
files <- list.files("./Obermoser study data/limma tables/Test_Vein/", full.names = TRUE)
files <- files[grep("(?<=/)[FPS].*\\.csv", files, perl = T)]
names <- str_remove(str_extract(files, "(?<=/)[FPS].*\\.csv"), ".csv")
for (i in 1:length(files)) {
obermoser3[[i]] <- read.csv(files[i])
names(obermoser3)[i] <- names[i]
}
obermoser4 <- list()
files <- list.files("./Obermoser study data/limma tables/Training_Finger/", full.names = TRUE)
files <- files[grep("(?<=/)[FPS].*\\.csv", files, perl = T)]
names <- str_remove(str_extract(files, "(?<=/)[FPS].*\\.csv"), ".csv")
for (i in 1:length(files)) {
obermoser4[[i]] <- read.csv(files[i])
names(obermoser4)[i] <- names[i]
}
dusek <- read.csv("./meditation study data/limma tables/limma time .csv")
names(dusek) <- str_remove(names(dusek), "time\\.")
names(dusek)[c(1,8)] <- c("ProbeID", "Symbol")
dusek <- dusek[,-9]
rusch <- read.csv("./PTSD study data/limma tables/Rusch_limma_Time.csv")
names(rusch)[1] <- "ProbeID"
rusch$Symbol <- mapIds(hgu133plus2.db, rusch$ProbeID, column = "SYMBOL", keytype = "PROBEID")
larocca <- read.csv("./LaRocca study data/limma tables/LaRocca_limma_Time.csv")
names(larocca)[1] <- "Symbol"
data <- list(gomez, meaburn1, meaburn2, gosch3, gosch6, gosch9, gosch12, gosch15, gosch18,
gosch21, obermoser1, obermoser2, obermoser3, obermoser4, dusek, rusch, larocca)
# Function to recursively flatten a nested list
flatten_list <- function(lst) {
flat_list <- list()
# Recursive helper function
flatten_helper <- function(x) {
if (!is.data.frame(x)) {
for (item in x) {
flatten_helper(item)
}
} else {
flat_list <<- append(flat_list, list(x))
}
}
# Apply the helper function to the input list
flatten_helper(lst)
return(flat_list)
}
data <- flatten_list(data)
names(data) <- c("gomez", "meaburn1", "meaburn2", "gosch3", "gosch6", "gosch9", "gosch12", "gosch15", "gosch18",
"gosch21", paste("obermoser1",names(obermoser1),sep=""), paste("obermoser2",names(obermoser2),sep=""),
paste("obermoser3",names(obermoser3),sep=""), paste("obermoser4",names(obermoser4),sep=""),
"dusek", "rusch", "larocca")
length(data)
# [1] 94
L <- data$gomez[order(data$gomez$adj.P.Val, decreasing = F),c("adj.P.Val","Symbol")]
unlist(L, use.names = T)
## GSEA of DEG results and comparison across studies
results <- list()
library(clusterProfiler)
library(Homo.sapiens)
columns(Homo.sapiens)
i = data$gomez
Li <- i[order(i$adj.P.Val, decreasing = F),c("adj.P.Val","Symbol")]
L <- Li$adj.P.Val
names(L) <- Li$Symbol
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb = Homo.sapiens, keyType = "SYMBOL",
maxGSSize = Inf, eps = 1e-300, pvalueCutoff = 0.05)
L
Li <- i[order(i$adj.P.Val, decreasing = F),c("P.Value","Symbol")]
L <- Li$P.Value
names(L) <- Li$Symbol
L
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb = Homo.sapiens, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05,
scoreType = "pos")
Homo.sapiens::Homo.sapiens@keys
library(org.Hs.eg.db)
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05,
scoreType =)
Li <- i[order(-log10(i$P.Value), decreasing = T),c("P.Value","Symbol")]
L <- -log10(Li$P.Value)
names(L) <- Li$Symbol
L
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05)
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 1)
gsea
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05,
scoreType = "pos")
gsea
i = data$obermoser1FluBaseVSseven
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05,
scoreType = "pos")
Li <- i[order(-log10(i$P.Value), decreasing = T),c("P.Value","Symbol")]
L <- -log10(Li$P.Value)
names(L) <- Li$Symbol
L
gsea <- clusterProfiler::gseGO(geneList = L,
OrgDb =org.Hs.eg.db, keyType = "SYMBOL",
maxGSSize = 500, eps = 1e-300, pvalueCutoff = 0.05,
scoreType = "pos")
gsea
