geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
top <- plot_grid(a,b,c)
bot <- plot_grid(d,e,f)
index <- grep(pattern = "AFFX-r2-Bs-", x = rownames(norm_expr))
# Bs = Bacillus subtilis
index
polyA <- data.frame(norm_expr[index,])
dim(polyA)
# [1] 12 36
polyAprobe <- as.data.frame(apply(polyA, 2, function(x){x <- rownames(polyA)}))
polyA <- pivot_longer(polyA, cols = colnames(polyA))
polyAprobe <- pivot_longer(polyAprobe, cols = colnames(polyAprobe))
polyAplot <- cbind(polyA, polyAprobe)
dim(polyAplot)
# [1] 432   4
polyAplot <- polyAplot[,-3]
names(polyAplot) <- c("array", "value", "probe")
polyAplot$probe <- factor(x = polyAplot$probe)
dim(polyAplot)
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Meaburn et al.')
# 5
b <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
c <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
times$time <- str_extract(times$time, pattern = "Day...")
polyAplot <- merge(polyAplot, times, by = "array", all.x = T)
dim(polyAplot)
# 3'
d <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
top <- plot_grid(a,b,c)
bot <- plot_grid(d,e,f)
plot_grid(top, bot, nrow = 2)
top
top <- plot_grid(a,b,c, nrow = 1)
bot <- plot_grid(d,e,f, nrow = 1)
plot_grid(top, bot, nrow = 2)
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Meaburn et al.')
a
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Meaburn et al.')
# 5
b <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
c <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
times$time <- str_extract(times$time, pattern = "Day...")
polyAplot <- merge(polyAplot, times, by = "array", all.x = T)
dim(polyAplot)
# 3'
d <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
top <- plot_grid(a,b,c, nrow = 1)
bot <- plot_grid(d,e,f, nrow = 1)
index <- grep(pattern = "AFFX-r2-Bs-", x = rownames(norm_expr))
# Bs = Bacillus subtilis
index
polyA <- data.frame(norm_expr[index,])
dim(polyA)
# [1] 12 36
polyAprobe <- as.data.frame(apply(polyA, 2, function(x){x <- rownames(polyA)}))
polyA <- pivot_longer(polyA, cols = colnames(polyA))
polyAprobe <- pivot_longer(polyAprobe, cols = colnames(polyAprobe))
polyAplot <- cbind(polyA, polyAprobe)
dim(polyAplot)
# [1] 432   4
polyAplot <- polyAplot[,-3]
names(polyAplot) <- c("array", "value", "probe")
polyAplot$probe <- factor(x = polyAplot$probe)
dim(polyAplot)
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Meaburn et al.')
# 5
b <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
c <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
times$time <- str_extract(times$time, pattern = "Day...")
polyAplot <- merge(polyAplot, times, by = "array", all.x = T)
dim(polyAplot)
# 3'
d <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Meaburn et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Meaburn et al.')
top <- plot_grid(a,b,c, nrow = 1)
bot <- plot_grid(d,e,f, nrow = 1)
plot_grid(top, bot, nrow = 2)
bot <- plot_grid(c,d, nrow = 1)
plot_grid(top, bot, nrow = 2)
# [1] 324    3
# 3'
a <- ggplot(data = hybridplot[grep("3", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-3_at", "AFFX-r2-Ec-bioC-3_at", "AFFX-r2-Ec-bioD-3_at", "AFFX-r2-P1-cre-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'hybridization control probe', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
b <- ggplot(data = hybridplot[grep("5", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-5_at", "AFFX-r2-Ec-bioC-5_at", "AFFX-r2-Ec-bioD-5_at", "AFFX-r2-P1-cre-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'hybridization control probe', title = "5' probe", subtitle = 'Meaburn et al.')
# 3'
c <- ggplot(data = hybridplot[grep("3", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-3_at", "AFFX-r2-Ec-bioC-3_at", "AFFX-r2-Ec-bioD-3_at", "AFFX-r2-P1-cre-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', x = 'hybridization control probe', title = "3' probe", subtitle = 'Meaburn et al.')
# 5'
d <- ggplot(data = hybridplot[grep("5", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-5_at", "AFFX-r2-Ec-bioC-5_at", "AFFX-r2-Ec-bioD-5_at", "AFFX-r2-P1-cre-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', x = 'hybridization control probe', title = "5' probe", subtitle = 'Meaburn et al.')
top <- plot_grid(a,b, nrow = 1)
bot <- plot_grid(c,d, nrow = 1)
plot_grid(top, bot, nrow = 2)
## Date: August 15 2024
## You should run "pre_QC_Dusek.R" before running this script to remove poor quality arrays from input directory.
#  This code generates line plots in the current graphics device.
# Load libraries ----
library(oligo)
library(tidyverse)
library(limma)
library(affy)
library(affycoretools)
library(hgu133plus2.db)
library(GEOquery)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(cowplot)
library(PCAtools)
library(EnhancedVolcano)
library(RColorBrewer)
## INPUT: pre-QC'd .CEL files
input_dir <- "~/Desktop/work_repo/data/GSE10041_RAW/"
## OUTPUT: limma results, plots, figures
output_dir <- "~/Desktop/work_repo/github/Dusek_study_data/output/"
# Import the CEL data ----
data <- ReadAffy(celfile.path = input_dir)
# Load in metadata ----
gset <- getGEO("GSE10041", GSEMatrix =TRUE, AnnotGPL=TRUE)
pheno_data_org <- pData(gset$GSE10041_series_matrix.txt.gz)
feature_data <- fData(gset$GSE10041_series_matrix.txt.gz)
dim(pheno_data_org)
# [1] 72 33
# filter out traits we want
pheno_data <- pheno_data_org %>%
dplyr::select(title = title,
geo_accession = geo_accession)
pheno_data$time <- str_extract(pheno_data_org$title, "N.")
pheno_data$id <- str_extract(pheno_data_org$title, "-.*") %>%
str_replace("-","")
dim(pheno_data)
# [1] 72 4
length(grep("M", pheno_data$title)) # [1] 25 This is the correct number in the original and validation groups.
pheno_data <- pheno_data[-grep("M", pheno_data$title),]
dim(pheno_data)
# [1] 47  4
table(pheno_data$time, pheno_data$id)
#    01 02 03 06 07 11 12 14 23 30 32 33 34 35 36 39 40 41 46 47 49 50 51 59
# N1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0  1  1  1  1  1  1  1  1  1
# N2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
sum(na.omit(pheno_data$time) == "N1") #[1] 23
sum(na.omit(pheno_data$time) == "N2") #[1] 24
# In this study, the researchers collected 19 N1 data points and 20 N2 datapoints for their analysis (one
# of the N1 arrays had too low of an intensity.) They also had a validation cohort of 5 additional individuals.
# The pheno data indicates we are one sample short. This is explained in GEO: there were 4 validation samples.
# However, there isn't a way to discern which cohort is which using the pheno_data.
# rename expression data columns
colnames(normalized_expression)
# rename expression data columns
colnames(normalized_expression)
# Get expression estimates
normalized_expression <- exprs(data)
dim(normalized_expression)
## Normalize the data into an eSet ----
data <- affy::rma(data)
# Get expression estimates
normalized_expression <- exprs(data)
dim(normalized_expression)
dim(pheno_data)
table(pheno_data$time, pheno_data$id)
colnames(normalized_expression)
colnames(normalized_expression) <- gsub(pattern = "(.CEL.gz)", replacement = "", x = colnames(normalized_expression))
dim(normalized_expression)
df <- data.frame(normalized_expression)
pheno_data <- pheno_data[pheno_data$geo_accession %in% colnames(df),]
dim(pheno_data)
# [1] 44  4
# remove unnecessary columns
df <- df[,colnames(df) %in% pheno_data$geo_accession]
normalized_expression <- normalized_expression[,colnames(normalized_expression) %in% pheno_data$geo_accession]
dim(df)
# [1] 54675    44
# make sure that the order of samples in the pheno data matches the order in exp data
index <- match(pheno_data$geo_accession, colnames(df))
pheno_data <- pheno_data[index,]
dim(pheno_data)
# [1] 44  4
identical(pheno_data$geo_accession, colnames(df))
# [1] TRUE
# Annotate sex
rps4y_vals <- normalized_expression["201909_at",]
plot(rps4y_vals)
pheno_data$sex <- NA
for (i in 1:length(rps4y_vals)) {
if (rps4y_vals[i] > 8) {
pheno_data$sex[i] <- "Male"
} else {
pheno_data$sex[i] <- "Female"
}
}
norm_expr <- normalized_expression
index <- grep(pattern = "AFFX-r2-Bs-", x = rownames(norm_expr))
# Bs = Bacillus subtilis
index
polyA <- data.frame(norm_expr[index,])
dim(polyA)
# [1] 12 36
polyAprobe <- as.data.frame(apply(polyA, 2, function(x){x <- rownames(polyA)}))
polyA <- pivot_longer(polyA, cols = colnames(polyA))
polyAprobe <- pivot_longer(polyAprobe, cols = colnames(polyAprobe))
polyAplot <- cbind(polyA, polyAprobe)
dim(polyAplot)
# [1] 432   4
polyAplot <- polyAplot[,-3]
names(polyAplot) <- c("array", "value", "probe")
polyAplot$probe <- factor(x = polyAplot$probe)
dim(polyAplot)
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Meaburn et al.')
a
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Dusek et al.')
# 5
b <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "5' probe", subtitle = 'Dusek et al.')
# M
c <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "M probe", subtitle = 'Dusek et al.')
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
times$time <- str_extract(times$time, pattern = "Day...")
polyAplot <- merge(polyAplot, times, by = "array", all.x = T)
dim(polyAplot)
# 3'
d <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Dusek et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Dusek et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Dusek et al.')
top <- plot_grid(a,b,c, nrow = 1)
bot <- plot_grid(d,e,f, nrow = 1)
plot_grid(top, bot, nrow = 2)
polyAplot
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
times
names(times)[1] <- "array"
times
polyAplot <- polyAplot[,-3]
polyAplot
index <- grep(pattern = "AFFX-r2-Bs-", x = rownames(norm_expr))
# Bs = Bacillus subtilis
index
polyA <- data.frame(norm_expr[index,])
dim(polyA)
# [1] 12 36
polyAprobe <- as.data.frame(apply(polyA, 2, function(x){x <- rownames(polyA)}))
polyA <- pivot_longer(polyA, cols = colnames(polyA))
polyAprobe <- pivot_longer(polyAprobe, cols = colnames(polyAprobe))
polyAplot <- cbind(polyA, polyAprobe)
dim(polyAplot)
# [1] 432   4
polyAplot <- polyAplot[,-3]
names(polyAplot) <- c("array", "value", "probe")
polyAplot$probe <- factor(x = polyAplot$probe)
dim(polyAplot)
# [1] 432    3
# 3
a <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'poly-A control probe', title = "3' probe", subtitle = 'Dusek et al.')
# 5
b <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "5' probe", subtitle = 'Dusek et al.')
# M
c <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', title = "M probe", subtitle = 'Dusek et al.')
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
polyAplot <- merge(polyAplot, times, by = "array", all.x = T)
dim(polyAplot)
# 3'
d <- ggplot(data = polyAplot[grep("3", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-3_at", "AFFX-r2-Bs-phe-3_at", "AFFX-r2-Bs-thr-3_s_at", "AFFX-r2-Bs-dap-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "3' probe", subtitle = 'Dusek et al.')
# 5'
e <- ggplot(data = polyAplot[grep("5", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-5_at", "AFFX-r2-Bs-phe-5_at", "AFFX-r2-Bs-thr-5_s_at", "AFFX-r2-Bs-dap-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "5' probe", subtitle = 'Dusek et al.')
# M
f <- ggplot(data = polyAplot[grep("M", polyAplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Bs-lys-M_at", "AFFX-r2-Bs-phe-M_at", "AFFX-r2-Bs-thr-M_s_at", "AFFX-r2-Bs-dap-M_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', title = "M probe", subtitle = 'Dusek et al.')
top <- plot_grid(a,b,c, nrow = 1)
bot <- plot_grid(d,e,f, nrow = 1)
plot_grid(top, bot, nrow = 2)
# Hybridization probes ----
index <- grep(pattern = "AFFX-r2-Ec|AFFX-r2-P1", x = rownames(norm_expr))
rownames(norm_expr)[index]
hybrid <- data.frame(norm_expr[index,])
dim(hybrid)
# [1] 9 36
hybridprobe <- as.data.frame(apply(hybrid, 2, function(x){x <- rownames(hybrid)}))
hybrid <- pivot_longer(hybrid, cols = colnames(hybrid))
hybridprobe <- pivot_longer(hybridprobe, cols = colnames(hybridprobe))
hybridplot <- cbind(hybrid, hybridprobe)
dim(hybridplot)
# [1] 324   4
hybridplot <- hybridplot[,-3]
names(hybridplot) <- c("array", "value", "probe")
hybridplot$probe <- factor(x = hybridplot$probe)
dim(hybridplot)
# [1] 324    3
# 3'
a <- ggplot(data = hybridplot[grep("3", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-3_at", "AFFX-r2-Ec-bioC-3_at", "AFFX-r2-Ec-bioD-3_at", "AFFX-r2-P1-cre-3_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'hybridization control probe', title = "3' probe", subtitle = 'Dusek et al.')
# 5'
b <- ggplot(data = hybridplot[grep("5", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-5_at", "AFFX-r2-Ec-bioC-5_at", "AFFX-r2-Ec-bioD-5_at", "AFFX-r2-P1-cre-5_at")), y = value, group = array)) +
geom_line(aes(color = array), alpha = 0.5) +
geom_point(aes(color = array)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5), legend.position = "none") +
labs(y = 'expr', x = 'hybridization control probe', title = "5' probe", subtitle = 'Dusek et al.')
## Color by time
## Color by time
times <- pheno_data[, c("geo_accession", "time")]
names(times)[1] <- "array"
hybridplot <- merge(hybridplot, times, by = "array", all.x = T)
dim(hybridplot)
# 3'
c <- ggplot(data = hybridplot[grep("3", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-3_at", "AFFX-r2-Ec-bioC-3_at", "AFFX-r2-Ec-bioD-3_at", "AFFX-r2-P1-cre-3_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', x = 'hybridization control probe', title = "3' probe", subtitle = 'Dusek et al.')
# 5'
d <- ggplot(data = hybridplot[grep("5", hybridplot$probe),], aes(x = factor(probe, level=c("AFFX-r2-Ec-bioB-5_at", "AFFX-r2-Ec-bioC-5_at", "AFFX-r2-Ec-bioD-5_at", "AFFX-r2-P1-cre-5_at")), y = value, group = array)) +
geom_line(aes(color = time), alpha = 0.5) +
geom_point(aes(color = time)) +
theme(axis.text.x = element_text(angle = 45, size = 6.5, vjust = 0.5)) +
labs(y = 'expr', x = 'hybridization control probe', title = "5' probe", subtitle = 'Dusek et al.')
top <- plot_grid(a,b, nrow = 1)
bot <- plot_grid(c,d, nrow = 1)
plot_grid(top, bot, nrow = 2)
